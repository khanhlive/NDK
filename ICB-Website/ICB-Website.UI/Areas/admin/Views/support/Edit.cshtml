@model ICB.Business.Models.Support

@{
    ViewBag.Title = "Cập nhật thông tin hỗ trợ";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}
<div data-controller="supportinfo" class="box box-primary">
    <div class="box-header">
        <h3 class="box-title">Thông tin hỗ trợ</h3>
    </div>
    <div class="box-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Support</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <img id="img-thumbnail" @if(Model!=null ){<text> src="@Model.Thumbnail"</text>} class="img-responsive img-thumbnail" style="height:100px;width:100px;margin-bottom:5px;" />
                        <div class="input-group" style="margin-top:15px;">
                            @Html.EditorFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            <span class="input-group-btn">
                                <button type="button" id="" onclick="ClickBrowser();" class="btn btn-primary">Browser</button>
                            </span>
                            @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Status,(List<SelectListItem>)ViewBag.Status, new {  @class = "form-control"  })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Lưu</button>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<div>
    @Html.ActionLink("Trở về danh sách", "Index")
</div>
@section scripts{
    <script>
    function ClickBrowser() {
        var ckfinder = new CKFinder();
        ckfinder.selectActionFunction = function (url, a, b) {
            var decodedUri = decodeURIComponent(url);
            $("#img-thumbnail").attr('src', decodedUri);
            $("#Thumbnail").attr({ 'value': decodedUri });
        }
        ckfinder.popup();
    }
    </script>

}